<template>
    <div class="addRole">
        <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">
          <el-form-item label="角色名称：" prop="roleName">
            <el-col :lg="8" :xs="20" :md="8" :sm="10">
              <el-input size="small" v-model="ruleForm.roleName"></el-input>
            </el-col>
          </el-form-item>
           <el-form-item label="添加时间：">
            {{currentTime}}
          </el-form-item>
          <el-form-item label="角色状态：">
            <el-radio-group v-model="ruleForm.delFlag">
              <el-radio label="1">启用</el-radio>
              <el-radio label="0">停用</el-radio>
            </el-radio-group>
          </el-form-item>
          <el-form-item label="备注：" prop="remark">
            <el-col :lg="8" :xs="20" :md="8" :sm="10">
                <el-input type="textarea" v-model="ruleForm.remark"></el-input>
            </el-col>
          </el-form-item>
          <el-form-item>
            <el-button type="primary" @click="submitForm('ruleForm')">下一步</el-button>
            <el-button @click="$router.go(-1);">取消</el-button>
          </el-form-item>
        </el-form>
    </div>
</template>
<script>
  export default {
    data() {
      return {
        currentTime:new Date(),
        roleName: '',
        ruleForm: {
          roleName: '',
          delFlag: '1',
          remark: '',
        },
        rules: {
          roleName: [
            { required: true, message: '请输入角色名称', trigger: 'blur' },
            // { min: 2, max: 16, message: '长度在 2 到 16 个字符', trigger: 'blur' },
            { 
              validator: (rule, value, callback)=>{
                console.log(value);  // 输入的值
                if(value === this.roleName){
                   return callback()  
                }
                this.$axios.get('/admin/verificatUserRole',{params:{roleName:value}}).then(res=>{
                  if(res.data.result.code == 1){
                    callback(new Error('用户名已存在'));
                  }
                  return callback()  
                });
              }, 
              trigger: 'blur' 
            }
          ],
          remark: [
            { min: 0, max: 200, message: '长度在 0 到 200 个字符', trigger: 'blur' }
          ]
        }
      };
    },
    created(){
      this.currentTime = this.format(new Date(),'yyyy-MM-dd hh:mm');
      var roleId = this.$route.query.roleId;
      if(roleId){
        this.$axios.get('/admin/userRoles/'+roleId).then(res=>{
            let data = res.data.result;
            this.roleName = data.roleName;
            this.ruleForm={
              roleName: data.roleName,
              delFlag: data.delFlag,
              remark: data.remark,
              roleId: data.roleId
            }
        });
          // 编辑页
      }
    },
    methods: {
      submitForm(formName) {
        this.$refs[formName].validate((valid) => {
          if (valid) {
            if(this.$route.query.roleId){
              this.$router.push({path:'/backstage/RoleAuthorityEditor',query:{data:JSON.stringify(this.ruleForm)}})
            }else{
              this.$router.push({path:'/backstage/RoleAuthority',query:{data:JSON.stringify(this.ruleForm)}})
            }
            console.log(this.ruleForm);
            // 新增
            // this.$http.post('http://192.168.11.98:9001/admin/basics/userRole',this.ruleForm).then(res=>{
            //   console.log(res)
            //   let data = res.data;
            
            // });
            // 编辑
            // this.$http.put('http://192.168.11.98:9001/admin/basics/userRoles',this.ruleForm).then(res=>{
            //   console.log(res)
            //   let data = res.data;
            
            // });
          } else {
            console.log('error submit!!');
            return false;
          }
        });
      },
      format(date,fmt){
        if (/(y+)/.test(fmt)) {
          fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));
        }
        let o = {
          'M+': date.getMonth() + 1,
          'd+': date.getDate(),
          'h+': date.getHours(),
          'm+': date.getMinutes(),
          's+': date.getSeconds()
        };
        for (let k in o) {
          if (new RegExp(`(${k})`).test(fmt)) {
            let str = o[k] + '';
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? str : ('00' + str).substr(str.length));
          }
        }
        return fmt;
      }
    }
  }
</script>
<style scoped>
    .addRole {
        padding: 30px 15px;
    }
</style>